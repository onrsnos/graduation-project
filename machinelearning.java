
package machinelearning;
import java.awt.List;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.Random;
import sun.security.util.Length;

/**
 *
 * @author ASUS
 */
public class HomeFrame extends javax.swing.JFrame {
   private static Random rnd=new Random();
   private static  Double x1=0.0;
   private static  Double x2=0.0;
   private static Integer BOYUT=50;
   private static Double[][] dizi=new Double[BOYUT][3];
   private static Integer N=0;
   private static Double MUTASYON_ORANI=0.0;
   private static Integer ITERASYON_SAYISI=0;
   private static Double[][] TEMP_DIZI;
   private static Integer BETA=5;
   

    /**
     * Creates new form HomeFrame
     */
    public HomeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boyutButton = new javax.swing.JLabel();
        nButton = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boyutTxt = new javax.swing.JTextField();
        nTxt = new javax.swing.JTextField();
        mutasyonOraniTxt = new javax.swing.JTextField();
        iterasyonSayisiTxt = new javax.swing.JTextField();
        button1 = new java.awt.Button();
        list1 = new java.awt.List();
        list2 = new java.awt.List();
        BetaSayisi = new java.awt.Label();
        BTxt = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boyutButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boyutButton.setText("Boyut");
        boyutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boyutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boyutButtonMouseClicked(evt);
            }
        });

        nButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nButton.setText("n");

        jLabel3.setText("Mutasyon Oranı");

        jLabel4.setText("iterasyon sayısı");

        nTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTxtActionPerformed(evt);
            }
        });

        button1.setLabel("button1");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        BetaSayisi.setText("Beta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BetaSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(BTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boyutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(iterasyonSayisiTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(boyutTxt)
                            .addComponent(nTxt)
                            .addComponent(mutasyonOraniTxt)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addComponent(list2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boyutButton)
                    .addComponent(boyutTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nTxt))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mutasyonOraniTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(iterasyonSayisiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BetaSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        BetaSayisi.getAccessibleContext().setAccessibleName("Beta");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nTxtActionPerformed

    private void boyutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boyutButtonMouseClicked
                    // TODO add your handling code here:
       
        
    }//GEN-LAST:event_boyutButtonMouseClicked

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        try{
        if(iterasyonSayisiTxt.getText()!="" && mutasyonOraniTxt.getText()!=""
                  && nTxt.getText()!="" && boyutTxt.getText()!="" && 
                BTxt.getText()!=""){
            BOYUT=Integer.parseInt(boyutTxt.getText());
            N=Integer.parseInt(nTxt.getText());
            MUTASYON_ORANI=Double.parseDouble(mutasyonOraniTxt.getText());
            ITERASYON_SAYISI= Integer.parseInt(iterasyonSayisiTxt.getText());
            BETA=Integer.parseInt(BTxt.getText());
            for(int i=0;i<ITERASYON_SAYISI;i++){
           
                 if(i==0){
                  for(int j=0;j<BOYUT;j++){
                    x1=x1Random();
                    x2=x2Random();
                    Double degisken3=Double.parseDouble(new DecimalFormat("##.##").format(hesapla(x1,x2)).replace(",", ".")); // f hesaplandı
                    dizi[j][0]=x1;
                    dizi[j][1]=x2;
                    dizi[j][2]=degisken3;
                       }
                    }
                else{
                    dizi=TEMP_DIZI;
                    for(int j=N;j<BOYUT;j++){
                    x1=x1Random();
                    x2=x2Random();
                    Double degisken3=Double.parseDouble(new DecimalFormat("##.##").format(hesapla(x1,x2)).replace(",", ".")); // f hesaplandı
                    dizi[j][0]=x1;
                    dizi[j][1]=x2;
                    dizi[j][2]=degisken3;
                     }
                }
                onur(dizi);
           
           
                }
        
                for(int i=0;i<N;i++){
                    list1.add(TEMP_DIZI[i][0]+"");
                    list2.add(TEMP_DIZI[i][1]+"");

                }
                }
                }catch(Exception e){
                    System.err.println(e);
                }
    }//GEN-LAST:event_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrame().setVisible(true);
            }
        });
    }
    public static void onur(Double[][] dizi){
       
       
        try{
            if(TEMP_DIZI.length<BOYUT){
                
            }
        }catch(Exception e){
            
        }
        System.out.println("Diziin ilk hali");
        for(int i=0;i<BOYUT;i++){
            System.out.println(dizi[i][0]+"   "+dizi[i][1]+"  "+ dizi[i][2]);
        }
        
       
        System.out.println();
        System.out.println();
        System.out.println("Siralanmış Hali");
        Double[][] nn=SelectionSort(dizi);
        for(int i=0;i<BOYUT;i++){
            System.out.println(nn[i][0]+"  "+ nn[i][1]+ " "+ nn[i][2]);
        }
        
        Double[][] new_list=new Double[N][2];
        for(int i=0;i<N;i++){
            for(int j=0;j<2;j++){
              new_list[i][j]=nn[i][j];
          
            }
            }
        System.out.println("Yeni Liste");
        for(int i=0;i<N;i++){
          
            System.out.println(new_list[i][0]+" "+ new_list[i][1] );
        }
        
        Integer[] klonlama_sayilari=new Integer[N];
        int toplam=0;
        for(int i=1;i<N+1;i++){
            klonlama_sayilari[i-1]=antijenHesapla(i);
            toplam+=klonlama_sayilari[i-1];
        }
        
        Double[][] son_islem=new Double[toplam][3];
        int temp_onur=0;
        int temp_index=0;
        for(int i=0;i<N;i++){
            temp_onur+=klonlama_sayilari[i];
            for(int j=temp_index;j<temp_onur;j++){
                son_islem[j][0]=new_list[i][0];
                son_islem[j][1]=new_list[i][1];
            }
            temp_index+=klonlama_sayilari[i];
        }
        
        System.out.println("\n\n Klonlanmış Hali");
        for(int i=0;i<toplam;i++){
            System.out.println(son_islem[i][0]+" "+son_islem[i][1]);
        }
        
         System.out.println("\n\n");
       
         for(int i=0;i<son_islem.length;i++){  // değerler mutasyona uğratıldı
            if(son_islem[i][0]<MUTASYON_ORANI){
               son_islem[i][0]=x1Random();
            }
            if(son_islem[i][1]<MUTASYON_ORANI){
               son_islem[i][1]=x2Random();
            }
         }System.out.println("\n\n Mutasyon Sonrası");
          for(int i=0;i<toplam;i++){
            System.out.println(son_islem[i][0]+" "+son_islem[i][1]+ " "+ son_islem[i][2]);
        }
          System.out.println("\n\n");
         for(int i=0;i<son_islem.length;i++){
             
             son_islem[i][2]=hesapla(son_islem[i][0], son_islem[i][1]);
         }
         System.out.println("\n");
           System.out.println("\n Flerin tekrar hesaplanması");
         for(int i=0;i<son_islem.length;i++){
             System.out.println(son_islem[i][0]+" "+son_islem[i][1]+ " "+ son_islem[i][2]);
        }
         
         ArrayList<Double> f_ler=new ArrayList<>();
         for(int i=0;i<son_islem.length;i++){
             f_ler.add(son_islem[i][2]);
          }
         Collections.sort(f_ler, Collections.reverseOrder());
         System.out.println("\n");
        
         for(int ki=0;ki<2;ki++){
             for(int i=0;i<son_islem.length;i++){
                 for(int j=0;j<son_islem.length;j++){
                     if(son_islem[j][2]==f_ler.get(i)){
                         double temp1=son_islem[i][2];
                         double temp2=son_islem[i][1];
                         double temp3=son_islem[i][0];
                         son_islem[i][2]=son_islem[j][2];
                         son_islem[j][2]=temp1;
                         son_islem[i][1]=son_islem[j][1];
                         son_islem[j][1]=temp2;
                         son_islem[i][0]=son_islem[j][0];
                         son_islem[j][0]=temp3;
                         
                         
                         
                      
                     }
                     
                 }
             }
                  } 
         
         System.out.println("Dizi Sıralaması Karşılaştırması");
         for(int i=0;i<son_islem.length;i++){
             System.out.println( f_ler.get(i)+"    " +son_islem[i][2]);
         }
         System.out.println("\n\n Siralanmış dizi");
         for(int i=0;i<son_islem.length;i++){
             System.out.println(son_islem[i][0]+"   "+ son_islem[i][1]+"   "+ son_islem[i][2]);
         }
         
         Double[][] onur=new Double[BOYUT][3];
         for(int i=0;i<N;i++){
             for(int j=0;j<3;j++){
                 onur[i][j]=son_islem[i][j];
             }
         }
         
        System.out.println("\n\n");
         for(int i=0;i<N;i++){
             System.out.println(onur[i][0]+" "+onur[i][1]);
             
             
         }
         
         TEMP_DIZI=onur;
        System.out.println("Dizi Parametre olarak atandı SON");
         
        
    }
    public static Double x1Random(){
        Double degisken1=-1.5+(4-(-1.5))*rnd.nextDouble();        // random x1 üretildi
        degisken1=Double.parseDouble(new DecimalFormat("##.##").format(degisken1).replace(",", "."));   // değer atandı(x1)
          
        return degisken1;
    }
    public static Double x2Random(){
        Double degisken2=-3+(4-(-3))*rnd.nextDouble();              // random x2 üretildi
        degisken2=Double.parseDouble(new DecimalFormat("##.##").format(degisken2).replace(",", "."));    // değer atandı(x2)
          
        return degisken2;
    }
    public static Double hesapla(Double x1,Double x2){
        Double deger=1+Math.sin(x1+x2)+(x1-x2)*(x1-x2)-1.5*x1+2.5*x2;
        deger=Double.parseDouble(new DecimalFormat("##.##").format(deger).replace(",", "."));
        return deger;
    }
    public static int antijenHesapla(int index){
        
        int onur=Math.round((BETA*BOYUT)/index);
        return onur;
    }
    public static double x1Rastgele(){
        return 0.0;
    }
    public static double x2Rastgele(){
        return 0.0;
    }
    public static Double[][] SelectionSort(Double[][] liste){
        
        for (int i = 0; i < BOYUT; i++) {
 
            double sayi2 = liste[i][2]; 
            double sayi0 = liste[i][0];
            double sayi1 = liste[i][1];
            int temp = i;
            double temp1=0;
            double temp2=0;
 
            for (int j = i+1; j < BOYUT ; j++) { 
                if(liste[j][2]>sayi2){
                    sayi2 = liste[j][2]; 
                    temp = j;
                    temp1=liste[j][0];
                    temp2=liste[j][1];
                }
            }
            if(temp != i){
                liste[temp][0] = liste[i][0];
                liste[temp][1] = liste[i][1];
                liste[temp][2] = liste[i][2];
                liste[i][2] = sayi2;
                liste[i][1] = temp2;
                liste[i][0]=temp1;
            }
        }
        
        return liste;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField BTxt;
    private java.awt.Label BetaSayisi;
    private javax.swing.JLabel boyutButton;
    private javax.swing.JTextField boyutTxt;
    private java.awt.Button button1;
    private javax.swing.JTextField iterasyonSayisiTxt;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private java.awt.List list1;
    private java.awt.List list2;
    private javax.swing.JTextField mutasyonOraniTxt;
    private javax.swing.JLabel nButton;
    private javax.swing.JTextField nTxt;
    // End of variables declaration//GEN-END:variables
}
